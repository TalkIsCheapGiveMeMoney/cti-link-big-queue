<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context" xmlns:redis="http://www.springframework.org/schema/redis" xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
           http://www.springframework.org/schema/redis http://www.springframework.org/schema/redis/spring-redis.xsd
           http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd">

	<!-- 读取属性文件 -->
	<bean id="propertyConfigurer" class="com.tinet.ctilink.util.PropertyUtil">
		<property name="locations">
			<list>
				<value>classpath*:app.properties</value>
			</list>
		</property>
	</bean>
	<!-- 定义Redis连接池 -->
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxTotal" value="20" />
		<property name="maxIdle" value="20" />
		<property name="minIdle" value="5" />
	</bean>

	<!-- 定义Spring Redis连接工厂 -->
	<bean id="redisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="hostName" value="${redis.url}" />
		<property name="port" value="${redis.port}" />
		<property name="database" value="1" />
		<property name="usePool" value="true" />
		<property name="poolConfig" ref="jedisPoolConfig" />
	</bean>

	<!-- 定义Spring Redis的序列化器 -->
	<bean id="stringRedisSerializer" class="org.springframework.data.redis.serializer.StringRedisSerializer" />
	<bean id="jsonRedisSerializer" class="org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer" />

	<!-- 定义Spring Redis模板（采用Json序列化） -->
	<bean id="jsonRedisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="redisConnectionFactory" />
		<property name="keySerializer" ref="stringRedisSerializer" />
		<property name="valueSerializer" ref="jsonRedisSerializer" />
		<property name="hashKeySerializer" ref="stringRedisSerializer" />
		<property name="hashValueSerializer" ref="jsonRedisSerializer" />
	</bean>

	<bean id="redisService" class="com.tinet.ctilink.cache.RedisService" />
	<!-- redisTaskScheduler 注入Spring上下文 -->
	<bean id="redisSchedulerContextUtil" class="com.github.davidmarquis.redisscheduler.impl.ContextUtil" />
	<bean id="statusScanTaskScheduler" class="com.github.davidmarquis.redisscheduler.impl.RedisTaskSchedulerImpl">
		<property name="redisTemplate" ref="jsonRedisTemplate"/>
		<property name="pollingDelayMillis" value="100"/>
		<property name="maxRetriesOnConnectionFailure" value="3"/>
		<property name="loopMillis" value="1000"/>
		<property name="taskTriggerListener">
			<bean class="com.tinet.ctilink.bigqueue.trigger.StatusScanTaskTriggerListener"/>
		</property>
		<property name="schedulerName" value="statusScan"/> 
	</bean>
	<bean id="statusCheckScanTaskScheduler" class="com.github.davidmarquis.redisscheduler.impl.RedisTaskSchedulerImpl">
		<property name="redisTemplate" ref="jsonRedisTemplate"/>
		<property name="pollingDelayMillis" value="100"/>
		<property name="maxRetriesOnConnectionFailure" value="3"/>
		<property name="loopMillis" value="300000"/>
		<property name="taskTriggerListener">
			<bean class="com.tinet.ctilink.bigqueue.trigger.StatusCheckScanTaskTriggerListener"/>
		</property>
		<property name="schedulerName" value="statusScan"/> 
	</bean>
	<bean id="wrapupEndTaskScheduler" class="com.github.davidmarquis.redisscheduler.impl.RedisTaskSchedulerImpl">
		<property name="redisTemplate" ref="jsonRedisTemplate"/>
		<property name="pollingDelayMillis" value="200"/>
		<property name="maxRetriesOnConnectionFailure" value="3"/>
		<property name="loopMillis" value="0"/>
		<property name="taskTriggerListener">
			<bean class="com.tinet.ctilink.bigqueue.trigger.WrapupEndTaskTriggerListener"/>
		</property>
		<property name="schedulerName" value="statusScan"/> 
	</bean>
	<!-- 定义接收事件的Redis消息监听器 
	<bean id="eventListener" class="com.tinet.ctilink.bigqueue.RedisEventListener" />
	-->
	<!-- 注册Redis消息订阅的监听器 
	<redis:listener-container>
		<redis:listener ref="eventListener" serializer="jsonRedisSerializer" method="handleMessage" topic="channel:xxxevent" />
	</redis:listener-container>
	-->
	<bean id="amiEventListener" class="com.tinet.ctilink.bigqueue.AmiEventListener">
	</bean>
	<!-- 注入Spring上下文 -->
	<bean id="contextUtil" class="com.tinet.ctilink.util.ContextUtil" />

</beans>